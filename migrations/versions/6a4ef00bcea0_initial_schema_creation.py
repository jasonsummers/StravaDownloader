"""Initial Schema Creation

Revision ID: 6a4ef00bcea0
Revises: 
Create Date: 2022-03-08 16:05:39.639589

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6a4ef00bcea0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(length=50), nullable=True),
    sa.Column('upload_id', sa.Integer(), nullable=True),
    sa.Column('athlete_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('distance', sa.Integer(), nullable=True),
    sa.Column('moving_time', sa.Integer(), nullable=True),
    sa.Column('elapsed_time', sa.Integer(), nullable=True),
    sa.Column('total_elevation_gain', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=25), nullable=True),
    sa.Column('start_date', sa.String(length=50), nullable=True),
    sa.Column('start_date_local', sa.String(length=50), nullable=True),
    sa.Column('timezone', sa.String(length=25), nullable=True),
    sa.Column('utc_offset', sa.Float(), nullable=True),
    sa.Column('start_lat', sa.Float(), nullable=True),
    sa.Column('start_lng', sa.Float(), nullable=True),
    sa.Column('end_lat', sa.Float(), nullable=True),
    sa.Column('end_lng', sa.Float(), nullable=True),
    sa.Column('achievement_count', sa.Integer(), nullable=True),
    sa.Column('kudos_count', sa.Integer(), nullable=True),
    sa.Column('comment_count', sa.Integer(), nullable=True),
    sa.Column('athlete_count', sa.Integer(), nullable=True),
    sa.Column('photo_count', sa.Integer(), nullable=True),
    sa.Column('trainer', sa.Boolean(), nullable=True),
    sa.Column('commute', sa.Boolean(), nullable=True),
    sa.Column('manual', sa.Boolean(), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('flagged', sa.Boolean(), nullable=True),
    sa.Column('gear_id', sa.String(length=25), nullable=True),
    sa.Column('from_accepted_tag', sa.Boolean(), nullable=True),
    sa.Column('average_speed', sa.Float(), nullable=True),
    sa.Column('max_speed', sa.Float(), nullable=True),
    sa.Column('average_cadence', sa.Float(), nullable=True),
    sa.Column('average_temp', sa.Integer(), nullable=True),
    sa.Column('average_watts', sa.Float(), nullable=True),
    sa.Column('weighted_average_watts', sa.Integer(), nullable=True),
    sa.Column('kilojoules', sa.Float(), nullable=True),
    sa.Column('device_watts', sa.Boolean(), nullable=True),
    sa.Column('has_heartrate', sa.Boolean(), nullable=True),
    sa.Column('max_watts', sa.Integer(), nullable=True),
    sa.Column('elev_high', sa.Float(), nullable=True),
    sa.Column('elev_low', sa.Float(), nullable=True),
    sa.Column('pr_count', sa.Integer(), nullable=True),
    sa.Column('total_photo_count', sa.Integer(), nullable=True),
    sa.Column('has_kudoed', sa.Boolean(), nullable=True),
    sa.Column('workout_type', sa.Integer(), nullable=True),
    sa.Column('suffer_score', sa.String(length=25), nullable=True),
    sa.Column('description', sa.String(length=25), nullable=True),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('partner_brand_tag', sa.String(length=50), nullable=True),
    sa.Column('hide_from_home', sa.Boolean(), nullable=True),
    sa.Column('device_name', sa.String(length=50), nullable=True),
    sa.Column('embed_token', sa.String(length=50), nullable=True),
    sa.Column('segment_leaderboard_opt_out', sa.Boolean(), nullable=True),
    sa.Column('leaderboard_opt_out', sa.Boolean(), nullable=True),
    sa.Column('average_heartrate', sa.Float(), nullable=True),
    sa.Column('max_heartrate', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('athletes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('firstname', sa.String(length=50), nullable=True),
    sa.Column('lastname', sa.String(length=50), nullable=True),
    sa.Column('bio', sa.String(length=500), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('sex', sa.String(length=10), nullable=True),
    sa.Column('premium', sa.Boolean(), nullable=True),
    sa.Column('summit', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.String(length=50), nullable=True),
    sa.Column('updated_at', sa.String(length=50), nullable=True),
    sa.Column('badge_type_id', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('profile_medium', sa.String(length=50), nullable=True),
    sa.Column('profile', sa.String(length=500), nullable=True),
    sa.Column('friend', sa.Boolean(), nullable=True),
    sa.Column('follower', sa.Boolean(), nullable=True),
    sa.Column('blocked', sa.Boolean(), nullable=True),
    sa.Column('can_follow', sa.Boolean(), nullable=True),
    sa.Column('follower_count', sa.Integer(), nullable=True),
    sa.Column('friend_count', sa.Integer(), nullable=True),
    sa.Column('mutual_friend_count', sa.Integer(), nullable=True),
    sa.Column('athlete_type', sa.Integer(), nullable=True),
    sa.Column('date_preference', sa.String(length=50), nullable=True),
    sa.Column('measurement_preference', sa.String(length=50), nullable=True),
    sa.Column('ftp', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('commenter_firstname', sa.String(length=50), nullable=True),
    sa.Column('commenter_lastname', sa.String(length=50), nullable=True),
    sa.Column('text', sa.String(length=250), nullable=True),
    sa.Column('created_at', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gear',
    sa.Column('id', sa.String(length=25), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=True),
    sa.Column('primary', sa.Boolean(), nullable=True),
    sa.Column('gear_type', sa.String(length=4), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('nickname', sa.String(length=50), nullable=True),
    sa.Column('retired', sa.Boolean(), nullable=True),
    sa.Column('distance', sa.Integer(), nullable=True),
    sa.Column('converted_distance', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['athlete_id'], ['athletes.id'], ),
    sa.ForeignKeyConstraint(['id'], ['activities.gear_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('highlighted_kudoser',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('destination_url', sa.String(length=250), nullable=True),
    sa.Column('display_name', sa.String(length=250), nullable=True),
    sa.Column('avatar_url', sa.String(length=250), nullable=True),
    sa.Column('show_name', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('kudosers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('firstname', sa.String(length=50), nullable=True),
    sa.Column('lastname', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('laps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('athlete_id', sa.Integer(), nullable=True),
    sa.Column('elapsed_time', sa.Integer(), nullable=True),
    sa.Column('moving_time', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.String(length=50), nullable=True),
    sa.Column('start_date_local', sa.String(length=50), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('start_index', sa.Integer(), nullable=True),
    sa.Column('end_index', sa.Integer(), nullable=True),
    sa.Column('total_elevation_gain', sa.Integer(), nullable=True),
    sa.Column('average_speed', sa.Float(), nullable=True),
    sa.Column('max_speed', sa.Float(), nullable=True),
    sa.Column('average_cadence', sa.Float(), nullable=True),
    sa.Column('device_watts', sa.Boolean(), nullable=True),
    sa.Column('average_watts', sa.Float(), nullable=True),
    sa.Column('lap_index', sa.Integer(), nullable=True),
    sa.Column('split', sa.Integer(), nullable=True),
    sa.Column('average_heartrate', sa.Float(), nullable=True),
    sa.Column('max_heartrate', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('maps',
    sa.Column('id', sa.String(length=25), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('polyline', sa.Text(), nullable=True),
    sa.Column('summary_polyline', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('use_primary_photo', sa.Boolean(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('segment_efforts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('athlete_id', sa.Integer(), nullable=True),
    sa.Column('elapsed_time', sa.Integer(), nullable=True),
    sa.Column('moving_time', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.String(length=50), nullable=True),
    sa.Column('start_date_local', sa.String(length=50), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('start_index', sa.Integer(), nullable=True),
    sa.Column('end_index', sa.Integer(), nullable=True),
    sa.Column('average_cadence', sa.Float(), nullable=True),
    sa.Column('device_watts', sa.Boolean(), nullable=True),
    sa.Column('average_watts', sa.Float(), nullable=True),
    sa.Column('kom_rank', sa.Integer(), nullable=True),
    sa.Column('pr_rank', sa.Integer(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=True),
    sa.Column('average_heartrate', sa.Float(), nullable=True),
    sa.Column('max_heartrate', sa.Float(), nullable=True),
    sa.Column('segment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['athlete_id'], ['athletes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('splits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('elapsed_time', sa.Integer(), nullable=True),
    sa.Column('moving_time', sa.Integer(), nullable=True),
    sa.Column('split', sa.Integer(), nullable=True),
    sa.Column('average_speed', sa.Float(), nullable=True),
    sa.Column('pace_zone', sa.Integer(), nullable=True),
    sa.Column('average_heartrate', sa.Float(), nullable=True),
    sa.Column('is_metric', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('primary_photo',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('photos_id', sa.Integer(), nullable=True),
    sa.Column('unique_id', sa.String(length=50), nullable=True),
    sa.Column('small_url', sa.String(length=250), nullable=True),
    sa.Column('large_url', sa.String(length=250), nullable=True),
    sa.Column('source', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['photos_id'], ['photos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('segments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('activity_type', sa.String(length=10), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('average_grade', sa.Float(), nullable=True),
    sa.Column('maximum_grade', sa.Float(), nullable=True),
    sa.Column('elevation_high', sa.Float(), nullable=True),
    sa.Column('elevation_low', sa.Float(), nullable=True),
    sa.Column('start_lat', sa.Float(), nullable=True),
    sa.Column('start_lng', sa.Float(), nullable=True),
    sa.Column('end_lat', sa.Float(), nullable=True),
    sa.Column('end_lng', sa.Float(), nullable=True),
    sa.Column('climb_category', sa.Integer(), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('hazardous', sa.Boolean(), nullable=True),
    sa.Column('starred', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['segment_efforts.segment_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('segments')
    op.drop_table('primary_photo')
    op.drop_table('splits')
    op.drop_table('segment_efforts')
    op.drop_table('photos')
    op.drop_table('maps')
    op.drop_table('laps')
    op.drop_table('kudosers')
    op.drop_table('highlighted_kudoser')
    op.drop_table('gear')
    op.drop_table('comments')
    op.drop_table('athletes')
    op.drop_table('activities')
    # ### end Alembic commands ###
